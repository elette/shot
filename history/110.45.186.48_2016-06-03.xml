<?xml version="1.0" encoding="UTF-8"?>
<QUERY>
  <item>
    <time>2016-06-03 11:34:43</time>
    <sql><![CDATA[select *
from table(MON_GET_LOCKS(null,null))]]></sql>
  </item>
  <item>
    <time>2016-06-03 11:34:51</time>
    <sql><![CDATA[WITH WLM (SYSDEFAULTUSERWORKLOAD) AS (
SELECT SUM(CASE WHEN WORKLOAD_NAME = 'SYSDEFAULTUSERWORKLOAD' THEN CPU_UTILIZATION END) AS SYSDEFAULTUSERWORKLOAD
  FROM TABLE(MON_SAMPLE_WORKLOAD_METRICS
      (null, current server, '',10 ,-2)) AS t 
 GROUP BY WORKLOAD_NAME
)
SELECT CURRENT TIME AS TIME,
       DECIMAL(MAX(SYSDEFAULTUSERWORKLOAD),5,2) AS SYSDEFAULTUSERWORKLOAD
  FROM WLM]]></sql>
  </item>
  <item>
    <time>2016-06-03 11:35:24</time>
    <sql><![CDATA[select 
	APPLICATION_HANDLE, APPLICATION_NAME,
	CASE WHEN POOL_DATA_L_READS = 0 THEN NULL ELSE 
	100 * (POOL_DATA_L_READS-POOL_DATA_P_READS)/POOL_DATA_L_READS END AS DATA_BPRATIO,
	CASE WHEN POOL_INDEX_L_READS = 0 THEN NULL ELSE 
	100 * (POOL_INDEX_L_READS-POOL_INDEX_P_READS)/POOL_INDEX_L_READS END AS INDEX_BPRATIO,
	CASE WHEN POOL_TEMP_DATA_L_READS = 0 THEN NULL ELSE 
	100 * (POOL_TEMP_DATA_L_READS-POOL_TEMP_DATA_P_READS)/POOL_TEMP_DATA_L_READS END AS TEMPDATA_BPRATIO,
	CASE WHEN POOL_TEMP_INDEX_L_READS = 0 THEN NULL ELSE 
	100 * (POOL_TEMP_INDEX_L_READS-POOL_TEMP_INDEX_P_READS)/POOL_TEMP_INDEX_L_READS END AS TEMPINDEX_BPRATIO,
	CASE WHEN TOTAL_APP_COMMITS = 0 THEN NULL ELSE 
	(POOL_DATA_P_READS+POOL_INDEX_P_READS+POOL_TEMP_DATA_P_READS+POOL_TEMP_INDEX_P_READS)/TOTAL_APP_COMMITS END AS BPREAD_PER_TRAN,
	CASE WHEN TOTAL_APP_COMMITS = 0 THEN NULL ELSE 
	(POOL_DATA_WRITES+POOL_INDEX_WRITES)/TOTAL_APP_COMMITS END AS BPWRITE_PER_TRAN,
	CASE WHEN ROWS_RETURNED = 0 THEN NULL ELSE ROWS_READ/ROWS_RETURNED END AS RS_RATIO,
	CASE WHEN TOTAL_APP_COMMITS = 0 THEN NULL 
	ELSE (TOTAL_SECTION_SORT_TIME-TOTAL_SECTION_SORT_PROC_TIME)/TOTAL_APP_COMMITS END AS SORT_WAIT_PER_TRAN,
	CASE WHEN TOTAL_APP_COMMITS = 0 THEN NULL 
	ELSE 1000 * LOCK_WAIT_TIME/TOTAL_APP_COMMITS END AS LOCK_WAIT_PER_TRAN,
	CASE WHEN TOTAL_APP_COMMITS = 0 THEN NULL 
	ELSE 1000 * (DEADLOCKS+LOCK_TIMEOUTS)/TOTAL_APP_COMMITS END AS DEADLOCK_AND_TIMEOUT_PER_TRAN,
	CASE WHEN TOTAL_APP_COMMITS = 0 THEN NULL 
	ELSE 1000*PKG_CACHE_INSERTS/TOTAL_APP_COMMITS END PKGCACHE_INSERTS
  from table(MON_GET_CONNECTION(NULL, -1)) as t]]></sql>
  </item>
  <item>
    <time>2016-06-03 11:35:38</time>
    <sql><![CDATA[WITH WLM (SYSDEFAULTUSERWORKLOAD) AS (
SELECT SUM(CASE WHEN WORKLOAD_NAME = 'SYSDEFAULTUSERWORKLOAD' THEN CPU_UTILIZATION END) AS SYSDEFAULTUSERWORKLOAD
  FROM TABLE(MON_SAMPLE_WORKLOAD_METRICS
      (null, current server, '',10 ,-2)) AS t 
 GROUP BY WORKLOAD_NAME
)
SELECT CURRENT TIME AS TIME,
       DECIMAL(MAX(SYSDEFAULTUSERWORKLOAD),5,2) AS SYSDEFAULTUSERWORKLOAD
  FROM WLM]]></sql>
  </item>
  <item>
    <time>2016-06-03 11:35:54</time>
    <sql><![CDATA[select snap0.SNAPSHOT_TIMESTAMP,
(
decimal(decimal(( TOTAL_CONS  -
         ( select TOTAL_CONS
          from sysibmadm.snapdb as SNAP1
          where snap1.SNAPSHOT_TIMESTAMP = ( select max(snap2.SNAPSHOT_TIMESTAMP)
                                             from sysibmadm.snapdb as SNAP2
                                             where snap2.SNAPSHOT_TIMESTAMP < snap0.SNAPSHOT_TIMESTAMP
                                           )

         )
), 21, 2)
/
decimal(timestampdiff(4, char( snap0.SNAPSHOT_TIMESTAMP -
  ( select max(snap2.SNAPSHOT_TIMESTAMP)
  from sysibmadm.snapdb as SNAP2
  where snap2.SNAPSHOT_TIMESTAMP < snap0.SNAPSHOT_TIMESTAMP
  ))
), 21, 2), 21, 2)
) as CONN_PER_MINUTE
from sysibmadm.snapdb as SNAP0]]></sql>
  </item>
  <item>
    <time>2016-06-03 11:36:05</time>
    <sql><![CDATA[SELECT CASE
       WHEN LATENCY <= REFRESH_AGE THEN 1
       ELSE 0
       END AS LATENCY_CHECK, 
	   V2.*
  FROM TABLE (
       SELECT CURRENT REFRESH AGE AS REFRESH_AGE,
              CUR_TS - REFRESH_TS AS LATENCY, 
			  V1.*
         FROM TABLE (
              SELECT CURRENT TIMESTAMP AS CUR_TS, 
                     (TIMESTAMP('1970-01-01') + (COMMIT_POINT-DELAY_OFFSET) SECONDS) + CURRENT TIMEZONE AS REFRESH_TS,
                     COMMIT_POINT, DELAY_OFFSET FROM SYSTOOLS.REPL_MQT_LATENCY
              ) AS V1
       ) AS V2]]></sql>
  </item>
  <item>
    <time>2016-06-03 11:36:18</time>
    <sql><![CDATA[WITH X(UOWEXEC, UOWWAIT, OTHER) AS (
SELECT CASE WHEN WORKLOAD_OCCURRENCE_STATE = 'UOWEXEC' THEN COUNT(*) END AS UOWEXEC,
       CASE WHEN WORKLOAD_OCCURRENCE_STATE = 'UOWWAIT' THEN COUNT(*) END AS UOWWAIT,
       CASE WHEN WORKLOAD_OCCURRENCE_STATE NOT IN ('UOWEXEC', 'UOWWAIT') THEN COUNT(*) END AS OTHER
  FROM SYSIBMADM.MON_CURRENT_UOW
 GROUP BY WORKLOAD_OCCURRENCE_STATE
)
SELECT CURRENT TIME AS TIME,
       MAX(UOWEXEC) AS UOWEXEC,
       MAX(UOWWAIT) AS UOWWAIT,
       MAX(OTHER) AS OTHER
  FROM X]]></sql>
  </item>
  <item>
    <time>2016-06-03 11:36:20</time>
    <sql><![CDATA[WITH X(UOWEXEC, UOWWAIT, OTHER) AS (
SELECT CASE WHEN WORKLOAD_OCCURRENCE_STATE = 'UOWEXEC' THEN COUNT(*) END AS UOWEXEC,
       CASE WHEN WORKLOAD_OCCURRENCE_STATE = 'UOWWAIT' THEN COUNT(*) END AS UOWWAIT,
       CASE WHEN WORKLOAD_OCCURRENCE_STATE NOT IN ('UOWEXEC', 'UOWWAIT') THEN COUNT(*) END AS OTHER
  FROM SYSIBMADM.MON_CURRENT_UOW
 GROUP BY WORKLOAD_OCCURRENCE_STATE
)
SELECT CURRENT TIME AS TIME,
       MAX(UOWEXEC) AS UOWEXEC,
       MAX(UOWWAIT) AS UOWWAIT,
       MAX(OTHER) AS OTHER
  FROM X]]></sql>
  </item>
  <item>
    <time>2016-06-03 11:36:21</time>
    <sql><![CDATA[WITH X(UOWEXEC, UOWWAIT, OTHER) AS (
SELECT CASE WHEN WORKLOAD_OCCURRENCE_STATE = 'UOWEXEC' THEN COUNT(*) END AS UOWEXEC,
       CASE WHEN WORKLOAD_OCCURRENCE_STATE = 'UOWWAIT' THEN COUNT(*) END AS UOWWAIT,
       CASE WHEN WORKLOAD_OCCURRENCE_STATE NOT IN ('UOWEXEC', 'UOWWAIT') THEN COUNT(*) END AS OTHER
  FROM SYSIBMADM.MON_CURRENT_UOW
 GROUP BY WORKLOAD_OCCURRENCE_STATE
)
SELECT CURRENT TIME AS TIME,
       MAX(UOWEXEC) AS UOWEXEC,
       MAX(UOWWAIT) AS UOWWAIT,
       MAX(OTHER) AS OTHER
  FROM X]]></sql>
  </item>
  <item>
    <time>2016-06-03 15:55:08</time>
    <sql><![CDATA[select 1 from dual]]></sql>
  </item>
</QUERY>


<?xml version="1.0" encoding="UTF-8"?>
<QUERY>
  <item>
    <time>2018-01-03 10:15:07</time>
    <sql><![CDATA[SELECT
substr(hex(x.SNAPSHOT_TIMESTAMP),1,14)
,x.rownum
,x.appls_cur_cons
,x.appls_in_db2
,x.select_sql_stmts
,x.uid_sql_stmts
,x.total_sorts
,x.total_sort_time
,x.sort_overflows
,x.active_sorts
,x.lock_list_in_use
,CASE pkg_cache_lookups when 0 then NULL
else
case when dec(((1 - dec(x.pkg_cache_inserts) / dec(x.pkg_cache_lookups)) * 100),15,2) < 0 then NULL
else dec(((1 - dec(x.pkg_cache_inserts) / dec(x.pkg_cache_lookups)) * 100),15,2) end end AS PKG_CACHE

,CASE cat_cache_lookups when 0 then NULL
else
case when dec(((1 - dec(x.cat_cache_inserts) / dec(x.cat_cache_lookups)) * 100),15,2) < 0 then NULL
else dec(((1 - dec(x.cat_cache_inserts) / dec(x.cat_cache_lookups)) * 100),15,2) end end AS CAT_CACHE

,x.pkg_cache_lookups,  x.pkg_cache_inserts
,x.cat_cache_lookups,  x.cat_cache_inserts

FROM (SELECT
a.rownum
,a.appls_cur_cons                             as appls_cur_cons
,a.appls_in_db2                               as appls_in_db2
,a.rows_selected      - b.rows_selected       as select_sql_stmts
,a.rows_updated       - b.rows_updated        as uid_sql_stmts
,a.total_sorts        - b.total_sorts         as total_sorts
,a.total_sort_time    - b.total_sort_time     as total_sort_time
,a.sort_overflows     - b.sort_overflows      as sort_overflows
,a.active_sorts                               as active_sorts
,a.lock_list_in_use                           as lock_list_in_use
,a.pkg_cache_lookups  - b.pkg_cache_lookups   as pkg_cache_lookups
,a.pkg_cache_inserts  - b.pkg_cache_inserts   as pkg_cache_inserts
,a.cat_cache_lookups  - b.cat_cache_lookups   as cat_cache_lookups
,a.cat_cache_inserts  - b.cat_cache_inserts   as cat_cache_inserts
,a.SNAPSHOT_TIMESTAMP                         as SNAPSHOT_TIMESTAMP
FROM (SELECT  ROWNUMBER() over(order by snapshot_timestamp) as rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) a,
(SELECT  ROWNUMBER() over(order by snapshot_timestamp)+1 AS rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) b
WHERE a.rownum = b.rownum) x]]></sql>
  </item>
  <item>
    <time>2018-01-03 10:24:32</time>
    <sql><![CDATA[SELECT
substr(hex(x.SNAPSHOT_TIMESTAMP),1,14)
,x.rownum
,x.appls_cur_cons
,x.appls_in_db2
,x.select_sql_stmts
,x.uid_sql_stmts
,x.total_sorts
,x.total_sort_time
,x.sort_overflows
,x.active_sorts
,x.lock_list_in_use
,CASE pkg_cache_lookups when 0 then NULL
else
case when dec(((1 - dec(x.pkg_cache_inserts) / dec(x.pkg_cache_lookups)) * 100),15,2) < 0 then NULL
else dec(((1 - dec(x.pkg_cache_inserts) / dec(x.pkg_cache_lookups)) * 100),15,2) end end AS PKG_CACHE

,CASE cat_cache_lookups when 0 then NULL
else
case when dec(((1 - dec(x.cat_cache_inserts) / dec(x.cat_cache_lookups)) * 100),15,2) < 0 then NULL
else dec(((1 - dec(x.cat_cache_inserts) / dec(x.cat_cache_lookups)) * 100),15,2) end end AS CAT_CACHE

,x.pkg_cache_lookups,  x.pkg_cache_inserts
,x.cat_cache_lookups,  x.cat_cache_inserts

FROM (SELECT
a.rownum
,a.appls_cur_cons                             as appls_cur_cons
,a.appls_in_db2                               as appls_in_db2
,a.rows_selected      - b.rows_selected       as select_sql_stmts
,a.rows_updated       - b.rows_updated        as uid_sql_stmts
,a.total_sorts        - b.total_sorts         as total_sorts
,a.total_sort_time    - b.total_sort_time     as total_sort_time
,a.sort_overflows     - b.sort_overflows      as sort_overflows
,a.active_sorts                               as active_sorts
,a.lock_list_in_use                           as lock_list_in_use
,a.pkg_cache_lookups  - b.pkg_cache_lookups   as pkg_cache_lookups
,a.pkg_cache_inserts  - b.pkg_cache_inserts   as pkg_cache_inserts
,a.cat_cache_lookups  - b.cat_cache_lookups   as cat_cache_lookups
,a.cat_cache_inserts  - b.cat_cache_inserts   as cat_cache_inserts
,a.SNAPSHOT_TIMESTAMP                         as SNAPSHOT_TIMESTAMP
FROM (SELECT  ROWNUMBER() over(order by snapshot_timestamp) as rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) a,
(SELECT  ROWNUMBER() over(order by snapshot_timestamp)+1 AS rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) b
WHERE a.rownum = b.rownum) x]]></sql>
  </item>
  <item>
    <time>2018-01-03 10:45:07</time>
    <sql><![CDATA[SELECT
substr(hex(x.SNAPSHOT_TIMESTAMP),1,14)
,x.rownum
,x.appls_cur_cons
,x.appls_in_db2
,x.select_sql_stmts
,x.uid_sql_stmts
,x.total_sorts
,x.total_sort_time
,x.sort_overflows
,x.active_sorts
,x.lock_list_in_use
,CASE pkg_cache_lookups when 0 then NULL
else
case when dec(((1 - dec(x.pkg_cache_inserts) / dec(x.pkg_cache_lookups)) * 100),15,2) < 0 then NULL
else dec(((1 - dec(x.pkg_cache_inserts) / dec(x.pkg_cache_lookups)) * 100),15,2) end end AS PKG_CACHE

,CASE cat_cache_lookups when 0 then NULL
else
case when dec(((1 - dec(x.cat_cache_inserts) / dec(x.cat_cache_lookups)) * 100),15,2) < 0 then NULL
else dec(((1 - dec(x.cat_cache_inserts) / dec(x.cat_cache_lookups)) * 100),15,2) end end AS CAT_CACHE

,x.pkg_cache_lookups,  x.pkg_cache_inserts
,x.cat_cache_lookups,  x.cat_cache_inserts

FROM (SELECT
a.rownum
,a.appls_cur_cons                             as appls_cur_cons
,a.appls_in_db2                               as appls_in_db2
,a.rows_selected      - b.rows_selected       as select_sql_stmts
,a.rows_updated       - b.rows_updated        as uid_sql_stmts
,a.total_sorts        - b.total_sorts         as total_sorts
,a.total_sort_time    - b.total_sort_time     as total_sort_time
,a.sort_overflows     - b.sort_overflows      as sort_overflows
,a.active_sorts                               as active_sorts
,a.lock_list_in_use                           as lock_list_in_use
,a.pkg_cache_lookups  - b.pkg_cache_lookups   as pkg_cache_lookups
,a.pkg_cache_inserts  - b.pkg_cache_inserts   as pkg_cache_inserts
,a.cat_cache_lookups  - b.cat_cache_lookups   as cat_cache_lookups
,a.cat_cache_inserts  - b.cat_cache_inserts   as cat_cache_inserts
,a.SNAPSHOT_TIMESTAMP                         as SNAPSHOT_TIMESTAMP
FROM (SELECT  ROWNUMBER() over(order by snapshot_timestamp) as rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) a,
(SELECT  ROWNUMBER() over(order by snapshot_timestamp)+1 AS rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) b
WHERE a.rownum = b.rownum) x]]></sql>
  </item>
  <item>
    <time>2018-01-03 10:48:08</time>
    <sql><![CDATA[SELECT
substr(hex(x.SNAPSHOT_TIMESTAMP),1,14) as time
,x.appls_cur_cons
,x.appls_in_db2
FROM (SELECT
a.rownum
,a.appls_cur_cons                             as appls_cur_cons
,a.appls_in_db2                               as appls_in_db2
,a.rows_selected      - b.rows_selected       as select_sql_stmts
,a.rows_updated       - b.rows_updated        as uid_sql_stmts
,a.total_sorts        - b.total_sorts         as total_sorts
,a.total_sort_time    - b.total_sort_time     as total_sort_time
,a.sort_overflows     - b.sort_overflows      as sort_overflows
,a.active_sorts                               as active_sorts
,a.lock_list_in_use                           as lock_list_in_use
,a.pkg_cache_lookups  - b.pkg_cache_lookups   as pkg_cache_lookups
,a.pkg_cache_inserts  - b.pkg_cache_inserts   as pkg_cache_inserts
,a.cat_cache_lookups  - b.cat_cache_lookups   as cat_cache_lookups
,a.cat_cache_inserts  - b.cat_cache_inserts   as cat_cache_inserts
,a.SNAPSHOT_TIMESTAMP                         as SNAPSHOT_TIMESTAMP
FROM (SELECT  ROWNUMBER() over(order by snapshot_timestamp) as rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) a,
(SELECT  ROWNUMBER() over(order by snapshot_timestamp)+1 AS rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) b
WHERE a.rownum = b.rownum) x]]></sql>
  </item>
  <item>
    <time>2018-01-03 10:51:14</time>
    <sql><![CDATA[SELECT
substr(hex(x.SNAPSHOT_TIMESTAMP),1,14) as time
,x.appls_cur_cons
,x.appls_in_db2
FROM (SELECT
a.rownum
,a.appls_cur_cons                             as appls_cur_cons
,a.appls_in_db2                               as appls_in_db2
,a.rows_selected      - b.rows_selected       as select_sql_stmts
,a.rows_updated       - b.rows_updated        as uid_sql_stmts
,a.total_sorts        - b.total_sorts         as total_sorts
,a.total_sort_time    - b.total_sort_time     as total_sort_time
,a.sort_overflows     - b.sort_overflows      as sort_overflows
,a.active_sorts                               as active_sorts
,a.lock_list_in_use                           as lock_list_in_use
,a.pkg_cache_lookups  - b.pkg_cache_lookups   as pkg_cache_lookups
,a.pkg_cache_inserts  - b.pkg_cache_inserts   as pkg_cache_inserts
,a.cat_cache_lookups  - b.cat_cache_lookups   as cat_cache_lookups
,a.cat_cache_inserts  - b.cat_cache_inserts   as cat_cache_inserts
,a.SNAPSHOT_TIMESTAMP                         as SNAPSHOT_TIMESTAMP
FROM (SELECT  ROWNUMBER() over(order by snapshot_timestamp) as rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) a,
(SELECT  ROWNUMBER() over(order by snapshot_timestamp)+1 AS rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) b
WHERE a.rownum = b.rownum) x]]></sql>
  </item>
  <item>
    <time>2018-01-03 10:52:15</time>
    <sql><![CDATA[SELECT
substr(hex(x.SNAPSHOT_TIMESTAMP),1,14) as time
,x.appls_cur_cons
,x.appls_in_db2
FROM (SELECT
a.rownum
,a.appls_cur_cons                             as appls_cur_cons
,a.appls_in_db2                               as appls_in_db2
,a.rows_selected      - b.rows_selected       as select_sql_stmts
,a.rows_updated       - b.rows_updated        as uid_sql_stmts
,a.total_sorts        - b.total_sorts         as total_sorts
,a.total_sort_time    - b.total_sort_time     as total_sort_time
,a.sort_overflows     - b.sort_overflows      as sort_overflows
,a.active_sorts                               as active_sorts
,a.lock_list_in_use                           as lock_list_in_use
,a.pkg_cache_lookups  - b.pkg_cache_lookups   as pkg_cache_lookups
,a.pkg_cache_inserts  - b.pkg_cache_inserts   as pkg_cache_inserts
,a.cat_cache_lookups  - b.cat_cache_lookups   as cat_cache_lookups
,a.cat_cache_inserts  - b.cat_cache_inserts   as cat_cache_inserts
,a.SNAPSHOT_TIMESTAMP                         as SNAPSHOT_TIMESTAMP
FROM (SELECT  ROWNUMBER() over(order by snapshot_timestamp) as rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) a,
(SELECT  ROWNUMBER() over(order by snapshot_timestamp)+1 AS rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) b
WHERE a.rownum = b.rownum) x]]></sql>
  </item>
  <item>
    <time>2018-01-03 10:58:30</time>
    <sql><![CDATA[SELECT
to_char(x.SNAPSHOT_TIMESTAMP, 'YYYY-MM-DD HH24:MI:SS') as time
,x.appls_cur_cons
,x.appls_in_db2
FROM (SELECT
a.rownum
,a.appls_cur_cons                             as appls_cur_cons
,a.appls_in_db2                               as appls_in_db2
,a.rows_selected      - b.rows_selected       as select_sql_stmts
,a.rows_updated       - b.rows_updated        as uid_sql_stmts
,a.total_sorts        - b.total_sorts         as total_sorts
,a.total_sort_time    - b.total_sort_time     as total_sort_time
,a.sort_overflows     - b.sort_overflows      as sort_overflows
,a.active_sorts                               as active_sorts
,a.lock_list_in_use                           as lock_list_in_use
,a.pkg_cache_lookups  - b.pkg_cache_lookups   as pkg_cache_lookups
,a.pkg_cache_inserts  - b.pkg_cache_inserts   as pkg_cache_inserts
,a.cat_cache_lookups  - b.cat_cache_lookups   as cat_cache_lookups
,a.cat_cache_inserts  - b.cat_cache_inserts   as cat_cache_inserts
,a.SNAPSHOT_TIMESTAMP                         as SNAPSHOT_TIMESTAMP
FROM (SELECT  ROWNUMBER() over(order by snapshot_timestamp) as rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) a,
(SELECT  ROWNUMBER() over(order by snapshot_timestamp)+1 AS rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) b
WHERE a.rownum = b.rownum) x]]></sql>
  </item>
  <item>
    <time>2018-01-03 11:01:47</time>
    <sql><![CDATA[SELECT
to_char(x.SNAPSHOT_TIMESTAMP, 'YYYY-MM-DD HH24:MI:SS') as time
,x.select_sql_stmts
,x.uid_sql_stmts
,x.total_sorts
,x.total_sort_time
,x.sort_overflows
,x.active_sorts
,x.lock_list_in_use
,CASE pkg_cache_lookups when 0 then NULL
else
case when dec(((1 - dec(x.pkg_cache_inserts) / dec(x.pkg_cache_lookups)) * 100),15,2) < 0 then NULL
else dec(((1 - dec(x.pkg_cache_inserts) / dec(x.pkg_cache_lookups)) * 100),15,2) end end AS PKG_CACHE

,CASE cat_cache_lookups when 0 then NULL
else
case when dec(((1 - dec(x.cat_cache_inserts) / dec(x.cat_cache_lookups)) * 100),15,2) < 0 then NULL
else dec(((1 - dec(x.cat_cache_inserts) / dec(x.cat_cache_lookups)) * 100),15,2) end end AS CAT_CACHE

,x.pkg_cache_lookups,  x.pkg_cache_inserts
,x.cat_cache_lookups,  x.cat_cache_inserts

FROM (SELECT
a.rownum
,a.appls_cur_cons                             as appls_cur_cons
,a.appls_in_db2                               as appls_in_db2
,a.rows_selected      - b.rows_selected       as select_sql_stmts
,a.rows_updated       - b.rows_updated        as uid_sql_stmts
,a.total_sorts        - b.total_sorts         as total_sorts
,a.total_sort_time    - b.total_sort_time     as total_sort_time
,a.sort_overflows     - b.sort_overflows      as sort_overflows
,a.active_sorts                               as active_sorts
,a.lock_list_in_use                           as lock_list_in_use
,a.pkg_cache_lookups  - b.pkg_cache_lookups   as pkg_cache_lookups
,a.pkg_cache_inserts  - b.pkg_cache_inserts   as pkg_cache_inserts
,a.cat_cache_lookups  - b.cat_cache_lookups   as cat_cache_lookups
,a.cat_cache_inserts  - b.cat_cache_inserts   as cat_cache_inserts
,a.SNAPSHOT_TIMESTAMP                         as SNAPSHOT_TIMESTAMP
FROM (SELECT  ROWNUMBER() over(order by snapshot_timestamp) as rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) a,
(SELECT  ROWNUMBER() over(order by snapshot_timestamp)+1 AS rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) b
WHERE a.rownum = b.rownum) x]]></sql>
  </item>
  <item>
    <time>2018-01-03 11:02:24</time>
    <sql><![CDATA[SELECT
to_char(x.SNAPSHOT_TIMESTAMP, 'YYYY-MM-DD HH24:MI:SS') as time
,x.select_sql_stmts
,x.uid_sql_stmts
FROM (SELECT
a.rownum
,a.appls_cur_cons                             as appls_cur_cons
,a.appls_in_db2                               as appls_in_db2
,a.rows_selected      - b.rows_selected       as select_sql_stmts
,a.rows_updated       - b.rows_updated        as uid_sql_stmts
,a.total_sorts        - b.total_sorts         as total_sorts
,a.total_sort_time    - b.total_sort_time     as total_sort_time
,a.sort_overflows     - b.sort_overflows      as sort_overflows
,a.active_sorts                               as active_sorts
,a.lock_list_in_use                           as lock_list_in_use
,a.pkg_cache_lookups  - b.pkg_cache_lookups   as pkg_cache_lookups
,a.pkg_cache_inserts  - b.pkg_cache_inserts   as pkg_cache_inserts
,a.cat_cache_lookups  - b.cat_cache_lookups   as cat_cache_lookups
,a.cat_cache_inserts  - b.cat_cache_inserts   as cat_cache_inserts
,a.SNAPSHOT_TIMESTAMP                         as SNAPSHOT_TIMESTAMP
FROM (SELECT  ROWNUMBER() over(order by snapshot_timestamp) as rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) a,
(SELECT  ROWNUMBER() over(order by snapshot_timestamp)+1 AS rownum
,dbpartitionnum
,appls_cur_cons
,appls_in_db2
,rows_selected
,rows_updated
,total_sorts
,total_sort_time
,sort_overflows
,active_sorts
,lock_list_in_use
,pkg_cache_lookups
,pkg_cache_inserts
,cat_cache_lookups
,cat_cache_inserts
,snapshot_timestamp
FROM dbccs.snapdb
ORDER BY snapshot_timestamp) b
WHERE a.rownum = b.rownum) x]]></sql>
  </item>
  <item>
    <time>2018-01-03 16:38:29</time>
    <sql><![CDATA[select * from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 16:39:50</time>
    <sql><![CDATA[select 
SORT_HEAP_ALLOCATED	,SORT_SHRHEAP_ALLOCATED	,SORT_SHRHEAP_TOP	,POST_SHRTHRESHOLD_SORTS	,TOTAL_SORTS	,TOTAL_SORT_TIME	,SORT_OVERFLOWS
 from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 16:40:17</time>
    <sql><![CDATA[select snapshot_timestamp,
SORT_HEAP_ALLOCATED	,SORT_SHRHEAP_ALLOCATED	,SORT_SHRHEAP_TOP	,POST_SHRTHRESHOLD_SORTS	,TOTAL_SORTS	,TOTAL_SORT_TIME	,SORT_OVERFLOWS
 from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 16:40:55</time>
    <sql><![CDATA[select * from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 16:42:58</time>
    <sql><![CDATA[select snapshot_timestamp,
SORT_HEAP_ALLOCATED	,SORT_SHRHEAP_ALLOCATED	,SORT_SHRHEAP_TOP	,POST_SHRTHRESHOLD_SORTS	,TOTAL_SORTS	,TOTAL_SORT_TIME	,SORT_OVERFLOWS
,TOTAL_HASH_JOINS	,TOTAL_HASH_LOOPS	,HASH_JOIN_OVERFLOWS	,HASH_JOIN_SMALL_OVERFLOWS	,POST_SHRTHRESHOLD_HASH_JOINS	,ACTIVE_HASH_JOINS
 from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 16:56:34</time>
    <sql><![CDATA[select to_char(snapshot_timestamp, 'YYYY-MM-DD'),
avg(SORT_HEAP_ALLOCATED	,avg(SORT_SHRHEAP_ALLOCATED)	,avg(SORT_SHRHEAP_TOP)	,avg(POST_SHRTHRESHOLD_SORTS)	,avg(TOTAL_SORTS)	,avg(TOTAL_SORT_TIME)	,avg(SORT_OVERFLOWS)
,avg(TOTAL_HASH_JOINS)	,avg(TOTAL_HASH_LOOPS)	,avg(HASH_JOIN_OVERFLOWS)	,avg(HASH_JOIN_SMALL_OVERFLOWS)	,avg(POST_SHRTHRESHOLD_HASH_JOINS)	,avg(ACTIVE_HASH_JOINS)
 from dbccs.snapdb
group by to_char(snapshot_timestamp, 'YYYY-MM-DD')]]></sql>
  </item>
  <item>
    <time>2018-01-03 16:56:51</time>
    <sql><![CDATA[select to_char(snapshot_timestamp, 'YYYY-MM-DD'),
avg(SORT_HEAP_ALLOCATED)	,avg(SORT_SHRHEAP_ALLOCATED)	,avg(SORT_SHRHEAP_TOP)	,avg(POST_SHRTHRESHOLD_SORTS)	,avg(TOTAL_SORTS)	,avg(TOTAL_SORT_TIME)	,avg(SORT_OVERFLOWS)
,avg(TOTAL_HASH_JOINS)	,avg(TOTAL_HASH_LOOPS)	,avg(HASH_JOIN_OVERFLOWS)	,avg(HASH_JOIN_SMALL_OVERFLOWS)	,avg(POST_SHRTHRESHOLD_HASH_JOINS)	,avg(ACTIVE_HASH_JOINS)
 from dbccs.snapdb
group by to_char(snapshot_timestamp, 'YYYY-MM-DD')]]></sql>
  </item>
  <item>
    <time>2018-01-03 16:57:57</time>
    <sql><![CDATA[select to_char(snapshot_timestamp, 'YYYY-MM-DD'),
avg(SORT_HEAP_ALLOCATED)	,avg(SORT_SHRHEAP_ALLOCATED)	,avg(SORT_SHRHEAP_TOP)	,avg(POST_SHRTHRESHOLD_SORTS)	,avg(TOTAL_SORTS) TOTAL_SORTS	,avg(TOTAL_SORT_TIME) TOTAL_SORT_TIME	,avg(SORT_OVERFLOWS) SORT_OVERFLOWS
,avg(TOTAL_HASH_JOINS) TOTAL_HASH_JOINS	,avg(TOTAL_HASH_LOOPS)	,avg(HASH_JOIN_OVERFLOWS) HASH_JOIN_OVERFLOWS	,avg(HASH_JOIN_SMALL_OVERFLOWS)	,avg(POST_SHRTHRESHOLD_HASH_JOINS)	,avg(ACTIVE_HASH_JOINS)
 from dbccs.snapdb
group by to_char(snapshot_timestamp, 'YYYY-MM-DD')]]></sql>
  </item>
  <item>
    <time>2018-01-03 17:38:59</time>
    <sql><![CDATA[select * from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 18:07:26</time>
    <sql><![CDATA[select EADLOCKS	,LOCK_ESCALS	,X_LOCK_ESCALS	,LOCKS_WAITING	,LOCK_TIMEOUTS from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 18:07:37</time>
    <sql><![CDATA[select DEADLOCKS	,LOCK_ESCALS	,X_LOCK_ESCALS	,LOCKS_WAITING	,LOCK_TIMEOUTS from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 18:08:18</time>
    <sql><![CDATA[select snapshot_timestamp
,DEADLOCKS	,LOCK_ESCALS	,X_LOCK_ESCALS	,LOCKS_WAITING	,LOCK_TIMEOUTS from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 18:11:18</time>
    <sql><![CDATA[select to_char(snapshot_timestamp, 'YYYY-MM-DD')
,max(DEADLOCKS)	DEADLOCKS ,max(LOCK_ESCALS) LOCK_ESCALS	,max(X_LOCK_ESCALS) X_LOCK_ESCALS	,max(LOCKS_WAITING) LOCKS_WAITING	,max(LOCK_TIMEOUTS) LOCK_TIMEOUTS from dbccs.snapdb
group by to_char(snapshot_timestamp, 'YYYY-MM-DD')]]></sql>
  </item>
  <item>
    <time>2018-01-03 18:25:20</time>
    <sql><![CDATA[select DEADLOCKS	,LOCK_ESCALS	,X_LOCK_ESCALS	,LOCKS_WAITING	,LOCK_TIMEOUTS from dbccs.snapdb]]></sql>
  </item>
  <item>
    <time>2018-01-03 18:25:43</time>
    <sql><![CDATA[select snapshot_timestamp
,DEADLOCKS	,LOCK_ESCALS	,X_LOCK_ESCALS	,LOCKS_WAITING	,LOCK_TIMEOUTS from dbccs.snapdb]]></sql>
  </item>
</QUERY>

